
// config
const apiKey = 'your_api_key';
const units = 'metric';

// custom icons
const weatherIcons = {
    '01d': `<svg class="weather-icon" width="150px" height="150px" viewBox="0 0 48 48" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path style="fill: var(--sun)" d="M24 38C24.9182 38 25.6712 38.7071 25.7442 39.6065L25.75 39.75V43.25C25.75 44.2165 24.9665 45 24 45C23.0818 45 22.3288 44.2929 22.2558 43.3935L22.25 43.25V39.75C22.25 38.7835 23.0335 38 24 38ZM35.8558 33.3893L35.9812 33.5021L38.4812 35.977C39.168 36.657 39.1736 37.765 38.4937 38.4519C37.8537 39.0983 36.8346 39.1413 36.1442 38.5772L36.0188 38.4644L33.5188 35.9895C32.832 35.3095 32.8264 34.2015 33.5063 33.5146C34.1463 32.8682 35.1654 32.8252 35.8558 33.3893ZM14.4728 33.5053C15.1166 34.1479 15.1552 35.1673 14.5883 35.8552L14.4749 35.9801L12.0021 38.4571C11.3192 39.1411 10.2112 39.142 9.5272 38.4592C8.88344 37.8165 8.84476 36.7972 9.41172 36.1092L9.52513 35.9843L11.9979 33.5073C12.6808 32.8233 13.7888 32.8224 14.4728 33.5053ZM24 13.0806C30.0306 13.0806 34.9194 17.9694 34.9194 24C34.9194 30.0306 30.0306 34.9194 24 34.9194C17.9694 34.9194 13.0806 30.0306 13.0806 24C13.0806 17.9694 17.9694 13.0806 24 13.0806ZM8.25 22.25C9.2165 22.25 10 23.0335 10 24C10 24.9182 9.29289 25.6712 8.39353 25.7442L8.25 25.75H4.75C3.7835 25.75 3 24.9665 3 24C3 23.0818 3.70711 22.3288 4.60647 22.2558L4.75 22.25H8.25ZM43.25 22.25C44.2165 22.25 45 23.0335 45 24C45 24.9182 44.2929 25.6712 43.3935 25.7442L43.25 25.75H39.75C38.7835 25.75 38 24.9665 38 24C38 23.0818 38.7071 22.3288 39.6065 22.2558L39.75 22.25H43.25ZM11.8359 9.42837L11.9608 9.54188L14.4356 12.0168C15.1191 12.7002 15.1191 13.8082 14.4356 14.4916C13.7924 15.1348 12.7731 15.1727 12.0856 14.6051L11.9608 14.4916L9.48589 12.0168C8.80247 11.3333 8.80247 10.2253 9.48589 9.54188C10.1291 8.89866 11.1485 8.86083 11.8359 9.42837ZM38.4592 9.53877C39.103 10.1815 39.1416 11.2008 38.5747 11.8887L38.4613 12.0136L35.9885 14.4906C35.3056 15.1746 34.1976 15.1755 33.5136 14.4927C32.8698 13.85 32.8312 12.8307 33.3981 12.1427L33.5115 12.0178L35.9843 9.54084C36.6672 8.85686 37.7752 8.85593 38.4592 9.53877ZM24 3C24.9182 3 25.6712 3.70711 25.7442 4.60647L25.75 4.75V8.25C25.75 9.2165 24.9665 10 24 10C23.0818 10 22.3288 9.29289 22.2558 8.39353L22.25 8.25V4.75C22.25 3.7835 23.0335 3 24 3Z" fill="#212121"/>
            </svg>`,
    '01n':  `<svg class="weather-icon" width="150px" height="150px" viewBox="0 0 48 48" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
                <path style="fill: #c7c7c7" d="M8.6842299,33.9551592 C14.1912287,43.493561 26.3879358,46.7616588 35.9263376,41.25466 C38.523898,39.7549577 40.7106194,37.7261351 42.3761255,35.3076023 C42.9329677,34.4989946 42.5727705,33.3822715 41.6483997,33.0514266 C34.1363281,30.3627532 30.1129202,27.2470092 27.7782173,22.7903664 C25.3203496,18.0986181 24.685175,12.959284 26.4045955,5.91464977 C26.642354,4.94053025 25.8729369,4.01301785 24.8716617,4.06673755 C21.7671522,4.23329845 18.7341781,5.12507996 15.9837306,6.71305154 C6.44532887,12.2200504 3.17723106,24.4167574 8.6842299,33.9551592 Z"></path>
            </svg>`,
    '02d': `<svg class="weather-icon" width="150px" height="150px" viewBox="0 0 48 48" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:svg="http://www.w3.org/2000/svg">
                <path
                    style="fill:#c7c7c7;"
                    d="m 25.867333,15.9648 c -2.909077,4.2e-4 -5.909409,1.08128 -7.84131,3.319586 -1.460567,1.645848 -2.294848,3.782289 -2.522654,5.958179 -2.24089,-0.07938 -4.449378,0.99082 -5.8550186,2.72421 -1.9234152,2.2471 -2.2292268,5.702499 -0.7292136,8.252452 1.1265642,1.965375 3.1698162,3.458139 5.4438982,3.70956 5.75398,0.115018 11.510087,0.07852 17.264982,0.07285 2.062527,-0.02175 4.12752,0.0062 6.1882,-0.08435 2.362515,-0.352629 4.424987,-2.008295 5.482812,-4.120511 0.489723,-1.0221 0.763106,-2.154145 0.687694,-3.291431 0.05017,-1.49423 -0.486706,-2.981584 -1.363814,-4.179485 C 41.503075,26.823399 39.856988,25.692367 37.996747,25.361059 37.498462,25.257552 36.988438,25.229543 36.480599,25.242565 36.201618,22.569077 34.980416,19.941508 32.86228,18.237577 30.919998,16.612543 28.364299,15.9436 25.867333,15.9648 Z"/>
                <path
                    style="fill:#f9cd45;fill-opacity:1;stroke:#86ff55;stroke-width:0"
                    d="m 16.802349,12.985215 c -2.915426,0.01836 -5.71736,1.813472 -6.9874194,4.432352 -1.004346,1.991907 -1.0926066,4.408743 -0.2416494,6.470282 0.151368,0.347316 0.2875446,0.713738 0.5063888,1.022998 0.226102,0.0056 0.402447,-0.216769 0.606151,-0.302288 0.980026,-0.587705 2.077907,-0.938327 3.187946,-1.18015 0.160576,-0.218929 0.158448,-0.53719 0.257459,-0.793258 0.590554,-2.075475 1.710843,-4.001528 3.320446,-5.459831 1.188846,-1.107396 2.626001,-1.924164 4.16508,-2.439933 0.176542,-0.13944 -0.105242,-0.290223 -0.208651,-0.362613 -1.342886,-0.92413 -2.977245,-1.408759 -4.605751,-1.387559 z"/>
                <path
                    style="fill:#f9cd45;fill-opacity:1;stroke:#86ff55;stroke-width:0"
                    d="m 23.565352,7.873008 c -0.621774,0.011275 -1.217411,0.3469728 -1.518377,0.8977566 -0.407473,0.6507336 -1.079449,1.2418944 -1.065842,2.0684934 -0.08283,1.046794 0.97646,1.981894 2.005781,1.802344 0.934484,-0.07526 1.397321,-1.01131 1.895039,-1.675313 C 25.352437,10.38692 25.616311,9.5130384 25.18664,8.8381638 24.890126,8.2296828 24.247363,7.828659 23.565352,7.873008 Z"/>
                <path
                    style="fill:#f9cd45;"
                    d="m 12.686367,6.7616016 c -0.919815,0.030203 -1.817537,0.8827896 -1.699922,1.8365622 0.0261,0.7920162 0.427873,1.5123362 0.712266,2.2351172 0.376893,0.628967 1.119748,1.040909 1.858594,0.889571 1.000109,-0.153422 1.747677,-1.277649 1.405664,-2.2564456 C 14.724742,8.744097 14.530523,7.9685076 14.065078,7.3535154 13.715558,6.9756972 13.204732,6.740622 12.686367,6.7616016 Z"/>
                <path
                    style="fill:#f9cd45;"
                    d="m 4.889414,13.840664 c -1.1744224,-0.05565 -2.0955465,1.277056 -1.6846875,2.364258 0.1924558,0.680031 0.8606338,1.009842 1.4508061,1.283839 0.672659,0.317953 1.4380014,0.790193 2.196186,0.446551 C 7.7327316,17.61116 8.2976652,16.56958 7.9565622,15.667031 7.6590534,14.797029 6.6772482,14.50145 5.9355971,14.121909 5.605636,13.967853 5.2640113,13.808164 4.889414,13.840664 Z"/>
                <path
                    style="fill:#f9cd45;"
                    d="m 5.9814844,23.286797 c -0.6821253,0.01609 -1.2307988,0.505526 -1.8186536,0.794648 -0.64864,0.326237 -1.2283786,0.95326 -1.181247,1.724168 -0.049446,1.002938 0.8997378,1.90618 1.902674,1.785715 0.6447202,-0.0506 1.1712824,-0.496682 1.7341406,-0.774844 0.6072312,-0.321368 1.1841522,-0.85521 1.205508,-1.59 0.1193118,-1.047252 -0.7881552,-2.00582 -1.842422,-1.939687 z"/>
            </svg>`,
    '02n': `<svg class="weather-icon" width="150px" height="150px" viewBox="0 0 48 48" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:svg="http://www.w3.org/2000/svg">
                <path
                    style="fill:#b2b2b2;"
                    d="m 25.875606,15.970197 c -2.772334,0.02774 -5.641919,0.951553 -7.55671,3.033462 -1.582807,1.628187 -2.506851,3.806146 -2.787519,6.043759 -0.10263,0.251816 -0.543668,0.12638 -0.772266,0.216508 -2.99946,0.239078 -5.7266102,2.506113 -6.5197724,5.404695 -0.5891196,2.320527 -0.09466,4.935157 1.5037518,6.754316 1.4877766,1.730615 3.7896176,2.742028 6.0759546,2.594733 7.053227,0.04016 14.107591,0.05838 21.160389,-0.03049 1.753924,0.01981 3.423107,-0.84084 4.705365,-1.989231 2.498719,-2.250583 3.104765,-6.311566 1.279002,-9.15608 -1.228648,-2.018853 -3.420254,-3.40924 -5.785493,-3.590572 -0.225462,-0.09672 -0.75536,0.10579 -0.703493,-0.283237 -0.357764,-2.208216 -1.208108,-4.400475 -2.833192,-5.988885 -1.978442,-2.137356 -4.91483,-3.024805 -7.766017,-3.008983 z"/>
                <path
                    style="fill:#c7c7c7;"
                    d="m 13.028902,7.9625088 c -0.810637,0.049568 -1.556057,0.7832466 -1.426535,1.62927 0.202906,1.4118932 0.52952,2.8220812 0.382947,4.2581702 -0.152203,2.302541 -1.277316,4.538268 -3.1963892,5.860472 -1.1969118,0.913263 -2.6329008,1.41034 -3.9903247,2.027362 -0.8115883,0.377758 -1.0814824,1.484961 -0.5362446,2.196073 0.8267681,1.145599 1.8928033,2.132075 3.0725503,2.908096 0.1893474,0.116254 0.61188,0.476632 0.6931548,0.08002 1.3665126,-1.697429 3.2742854,-2.945978 5.4115684,-3.396381 0.33691,-0.0215 0.593559,-0.191886 0.595837,-0.554935 0.881581,-3.692955 3.679976,-6.861035 7.281824,-8.120872 0.227112,-0.14067 0.716277,-0.09739 0.758932,-0.414063 -1.251877,-3.459171 -4.616686,-5.9709452 -8.245029,-6.4095818 -0.266199,-0.031406 -0.533721,-0.0672 -0.802291,-0.063632 z"/>
            </svg>`,
    '03d':  `<svg class="weather-icon" width="150px" height="150px" viewBox="0 0 48 48" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
                <path style="fill: #c7c7c7" d="M24.0011082,12.0096412 C30.3381703,12.0096412 33.9330779,16.204222 34.4559068,21.2698939 L34.6158392,21.2698888 C38.6939986,21.2698888 42,24.5673365 42,28.6349444 C42,32.7025523 38.6939986,36 34.6158392,36 L13.3863771,36 C9.3082177,36 6.00221632,32.7025523 6.00221632,28.6349444 C6.00221632,24.5673365 9.3082177,21.2698888 13.3864221,21.2698888 L13.5463095,21.2698939 C14.0721799,16.1709267 17.664046,12.0096412 24.0011082,12.0096412 Z"></path>
            </svg>`,
    '10d':  `<svg class="weather-icon" height="150px" viewBox="0 -960 960 960" width="150px" fill="#ffffff" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:svg="http://www.w3.org/2000/svg">
                <path
                    d="m 550,-100 q -14,7 -27.5,2.5 Q 509,-102 502,-116 l -60,-120 q -7,-14 -2.5,-27.5 4.5,-13.5 18.5,-20.5 13,-7 27,-2.5 14,4.5 21,18.5 l 60,120 q 7,14 2.5,27.5 Q 564,-107 550,-100 Z m 198,0 q -14,7 -28,2.5 -14,-4.5 -21,-18.5 l -60,-120 q -7,-14 -2,-27.5 5,-13.5 19,-20.5 14,-7 27.5,-2.5 13.5,4.5 20.5,18.5 l 60,120 q 7,14 2.5,27.5 Q 762,-107 748,-100 Z m -396,0 q -14,7 -28,2.5 -14,-4.5 -21,-18.5 l -60,-120 q -7,-14 -2,-27.5 5,-13.5 19,-20.5 14,-7 27.5,-2.5 13.5,4.5 20.5,18.5 l 60,120 q 7,14 2.5,27.5 Q 366,-107 352,-100 Z m -57,-236 q -85,0 -142,-61.5 Q 96,-459 96,-545 96,-622 148.5,-677.5 201,-733 278,-743 308,-799 362.5,-831.5 417,-864 480,-864 q 85,0 148,54.5 63,54.5 77,137.5 67,2 113,52 46,50 46,116 0,70 -49,119 -49,49 -119,49 z"/>
                <path
                    style="fill: #36c8eb;"
                    d="m 669.73048,-288.64544 c -17.05618,0.082 -32.35866,14.72568 -35.64824,31.0525 -1.5218,17.22338 10.16766,31.68196 16.40632,46.8302 17.78236,35.0727 34.47474,70.80068 54.07928,104.88914 14.68314,16.14072 42.55994,14.02514 56.09898,-2.52788 8.37842,-9.18812 10.65276,-23.02576 7.21066,-34.56576 -22.83946,-44.73376 -43.94294,-90.43706 -68.6837,-134.15404 -6.88052,-7.93094 -17.01232,-13.05732 -27.69046,-11.54224 l -1.1896,0.0121 z"/>
                <path
                    style="fill: #36c8eb;"
                    d="m 472.3025,-289.13104 c -16.77618,0.8086 -33.0529,14.58524 -35.22072,31.43122 -0.6446,8.69952 -0.5872,17.43654 4.87212,24.75702 20.69222,40.31326 39.51464,81.63718 61.83096,121.08872 8.82826,17.9538 33.88858,21.91662 49.70028,11.0525 13.76302,-7.77948 21.3316,-25.0235 16.03624,-40.19982 -13.65312,-32.46496 -30.796,-63.3681 -46.2824,-94.9867 -7.83076,-14.1174 -13.85446,-29.472 -23.19948,-42.63876 -7.15896,-7.2636 -17.65818,-10.75962 -27.737,-10.50418 z"/>
                <path
                    style="fill: #36c8eb;"
                    d="m 276.37778,-289.33318 c -20.89442,0.5468 -42.07134,20.4099 -38.05064,42.21654 7.84404,22.9485 20.50322,43.9653 30.75494,65.89492 13.3023,25.17612 24.2249,51.81996 40.15584,75.4945 13.71256,15.96772 40.55042,13.59046 54.23328,-1.2848 9.06108,-8.31046 10.67616,-21.01586 9.68168,-32.63708 -21.76576,-44.0539 -43.01592,-88.52238 -66.48002,-131.7496 -5.60166,-11.12714 -17.88858,-18.2579 -30.29508,-17.93448 z"/>
                <path
                    style="fill: #c7c7c7;"
                    d="m 475.54832,-864.9303 c -79.2018,0.35274 -155.92332,46.27074 -195.05576,114.92334 -2.00894,5.39996 -6.61734,7.07682 -11.98638,7.33788 -49.619,7.92294 -95.77957,34.36588 -128.03965,72.85016 -29.00869,33.31484 -45.97713,77.08078 -45.287626,121.39886 -2.734366,61.01696 23.435506,122.00766 68.410766,163.10762 36.00654,34.10916 85.88845,52.24142 135.35041,50.38212 135.31264,0.8292 270.64044,1.178 405.9496,-0.166 40.04534,-1.4726 79.31904,-17.85624 107.82052,-46.16878 34.02362,-31.40236 53.34316,-77.4803 52.31832,-123.72812 0.874,-62.36904 -37.41112,-122.22428 -91.97554,-151.25002 -20.66634,-10.83828 -43.88774,-15.44138 -66.93078,-17.68798 -10.73628,-59.648 -44.57404,-115.1301 -94.39822,-150.01627 -39.36992,-28.11632 -87.8215,-42.674 -136.17566,-40.98281 z"/>
            </svg>`,
    '10n':  `<svg class="weather-icon" height="150px" viewBox="0 -960 960 960" width="150px" fill="#ffffff" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:svg="http://www.w3.org/2000/svg">
                <path
                    d="m 550,-100 q -14,7 -27.5,2.5 Q 509,-102 502,-116 l -60,-120 q -7,-14 -2.5,-27.5 4.5,-13.5 18.5,-20.5 13,-7 27,-2.5 14,4.5 21,18.5 l 60,120 q 7,14 2.5,27.5 Q 564,-107 550,-100 Z m 198,0 q -14,7 -28,2.5 -14,-4.5 -21,-18.5 l -60,-120 q -7,-14 -2,-27.5 5,-13.5 19,-20.5 14,-7 27.5,-2.5 13.5,4.5 20.5,18.5 l 60,120 q 7,14 2.5,27.5 Q 762,-107 748,-100 Z m -396,0 q -14,7 -28,2.5 -14,-4.5 -21,-18.5 l -60,-120 q -7,-14 -2,-27.5 5,-13.5 19,-20.5 14,-7 27.5,-2.5 13.5,4.5 20.5,18.5 l 60,120 q 7,14 2.5,27.5 Q 366,-107 352,-100 Z m -57,-236 q -85,0 -142,-61.5 Q 96,-459 96,-545 96,-622 148.5,-677.5 201,-733 278,-743 308,-799 362.5,-831.5 417,-864 480,-864 q 85,0 148,54.5 63,54.5 77,137.5 67,2 113,52 46,50 46,116 0,70 -49,119 -49,49 -119,49 z"/>
                <path
                    style="fill: #36c8eb;"
                    d="m 669.73048,-288.64544 c -17.05618,0.082 -32.35866,14.72568 -35.64824,31.0525 -1.5218,17.22338 10.16766,31.68196 16.40632,46.8302 17.78236,35.0727 34.47474,70.80068 54.07928,104.88914 14.68314,16.14072 42.55994,14.02514 56.09898,-2.52788 8.37842,-9.18812 10.65276,-23.02576 7.21066,-34.56576 -22.83946,-44.73376 -43.94294,-90.43706 -68.6837,-134.15404 -6.88052,-7.93094 -17.01232,-13.05732 -27.69046,-11.54224 l -1.1896,0.0121 z"/>
                <path
                    style="fill: #36c8eb;"
                    d="m 472.3025,-289.13104 c -16.77618,0.8086 -33.0529,14.58524 -35.22072,31.43122 -0.6446,8.69952 -0.5872,17.43654 4.87212,24.75702 20.69222,40.31326 39.51464,81.63718 61.83096,121.08872 8.82826,17.9538 33.88858,21.91662 49.70028,11.0525 13.76302,-7.77948 21.3316,-25.0235 16.03624,-40.19982 -13.65312,-32.46496 -30.796,-63.3681 -46.2824,-94.9867 -7.83076,-14.1174 -13.85446,-29.472 -23.19948,-42.63876 -7.15896,-7.2636 -17.65818,-10.75962 -27.737,-10.50418 z"/>
                <path
                    style="fill: #36c8eb;"
                    d="m 276.37778,-289.33318 c -20.89442,0.5468 -42.07134,20.4099 -38.05064,42.21654 7.84404,22.9485 20.50322,43.9653 30.75494,65.89492 13.3023,25.17612 24.2249,51.81996 40.15584,75.4945 13.71256,15.96772 40.55042,13.59046 54.23328,-1.2848 9.06108,-8.31046 10.67616,-21.01586 9.68168,-32.63708 -21.76576,-44.0539 -43.01592,-88.52238 -66.48002,-131.7496 -5.60166,-11.12714 -17.88858,-18.2579 -30.29508,-17.93448 z"/>
                <path
                    style="fill: #c7c7c7;"
                    d="m 475.54832,-864.9303 c -79.2018,0.35274 -155.92332,46.27074 -195.05576,114.92334 -2.00894,5.39996 -6.61734,7.07682 -11.98638,7.33788 -49.619,7.92294 -95.77957,34.36588 -128.03965,72.85016 -29.00869,33.31484 -45.97713,77.08078 -45.287626,121.39886 -2.734366,61.01696 23.435506,122.00766 68.410766,163.10762 36.00654,34.10916 85.88845,52.24142 135.35041,50.38212 135.31264,0.8292 270.64044,1.178 405.9496,-0.166 40.04534,-1.4726 79.31904,-17.85624 107.82052,-46.16878 34.02362,-31.40236 53.34316,-77.4803 52.31832,-123.72812 0.874,-62.36904 -37.41112,-122.22428 -91.97554,-151.25002 -20.66634,-10.83828 -43.88774,-15.44138 -66.93078,-17.68798 -10.73628,-59.648 -44.57404,-115.1301 -94.39822,-150.01627 -39.36992,-28.11632 -87.8215,-42.674 -136.17566,-40.98281 z"/>
            </svg>`,
    '11d':  `<svg class="weather-icon" height="150px" viewBox="0 -960 960 960" width="150px" fill="#b2b2b2" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:svg="http://www.w3.org/2000/svg">
                <path
                    d="m 300,-40 36,-100 h -76 l 50,-140 h 100 l -43,100 h 83 L 340,-40 Z m 270,-40 28,-80 h -78 l 43,-120 h 100 l -35,80 h 82 L 610,-80 Z M 290,-340 q -87,0 -148.5,-61.5 Q 80,-463 80,-550 q 0,-79 56.5,-141 56.5,-62 140.5,-68 32,-56 84.5,-88.5 Q 414,-880 480,-880 q 91,0 152.5,57.5 61.5,57.5 75.5,142.5 79,4 125.5,53.5 46.5,49.5 46.5,116.5 0,70 -49.5,120 -49.5,50 -120.5,50 z"/>
                <path
                    style="fill:#f9cd45;"
                    d="m 307.60224,-281.8355 c -17.4252,45.93986 -33.22412,92.68088 -50.02324,138.9289 -0.204,8.73364 11.34496,4.31746 16.81878,5.45608 18.77316,0.3324 38.14586,-0.086 56.50138,1.0124 -10.70932,31.342 -22.36948,62.35038 -33.17612,93.65706 -0.086,8.16512 10.48266,4.73704 15.63662,5.65754 9.83664,-0.5432 20.19238,1.362 29.6515,-1.1664 36.04546,-45.84566 71.96774,-91.79484 107.96468,-137.68122 3.05752,-9.05452 -9.8204,-6.06728 -15.01358,-6.56074 -21.19592,-0.29 -42.40056,-0.004 -63.47388,-0.988 12.7553,-31.55078 27.22284,-62.5432 39.68204,-94.09426 -0.2676,-6.9882 -9.5948,-4.13058 -14.24458,-4.97852 -29.5185,-0.337 -59.27056,-0.8612 -88.64752,0.078 l -1.1028,0.4462 z"/>
                <path
                    style="fill:#f9cd45;"
                    d="m 578.23652,-282.73698 c -6.3376,1.1934 -17.11136,-3.24748 -19.38866,5.29968 -14.19202,38.3895 -27.81568,76.98642 -41.68708,115.4926 -0.214,8.7102 11.32254,4.36796 16.78982,5.54908 19.65354,0.3014 39.3071,0.6024 58.96064,0.903 -8.26328,24.74316 -18.20432,49.09628 -25.22536,74.1659 2.27168,7.22138 12.19802,4.00792 17.81598,5.0116 8.8771,-0.6932 18.56134,1.685 26.8448,-1.422 33.04682,-39.65362 66.09438,-79.30666 99.14264,-118.9591 3.31864,-9.09094 -9.7691,-6.1787 -14.96978,-6.56134 -21.1063,-0.066 -42.1501,0.2152 -63.20864,-0.4438 10.28248,-24.80226 22.1485,-49.31874 31.93186,-74.24436 -1.0732,-7.92298 -12.3302,-3.14148 -17.9469,-4.5109 -23.01958,-0.128 -46.03914,-0.368 -69.05932,-0.2806 z"/>
            </svg>`,
    '11n':  `<svg class="weather-icon" height="150px" viewBox="0 -960 960 960" width="150px" fill="#b2b2b2" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:svg="http://www.w3.org/2000/svg">
                <path
                    d="m 300,-40 36,-100 h -76 l 50,-140 h 100 l -43,100 h 83 L 340,-40 Z m 270,-40 28,-80 h -78 l 43,-120 h 100 l -35,80 h 82 L 610,-80 Z M 290,-340 q -87,0 -148.5,-61.5 Q 80,-463 80,-550 q 0,-79 56.5,-141 56.5,-62 140.5,-68 32,-56 84.5,-88.5 Q 414,-880 480,-880 q 91,0 152.5,57.5 61.5,57.5 75.5,142.5 79,4 125.5,53.5 46.5,49.5 46.5,116.5 0,70 -49.5,120 -49.5,50 -120.5,50 z"/>
                <path
                    style="fill:#f9cd45;"
                    d="m 307.60224,-281.8355 c -17.4252,45.93986 -33.22412,92.68088 -50.02324,138.9289 -0.204,8.73364 11.34496,4.31746 16.81878,5.45608 18.77316,0.3324 38.14586,-0.086 56.50138,1.0124 -10.70932,31.342 -22.36948,62.35038 -33.17612,93.65706 -0.086,8.16512 10.48266,4.73704 15.63662,5.65754 9.83664,-0.5432 20.19238,1.362 29.6515,-1.1664 36.04546,-45.84566 71.96774,-91.79484 107.96468,-137.68122 3.05752,-9.05452 -9.8204,-6.06728 -15.01358,-6.56074 -21.19592,-0.29 -42.40056,-0.004 -63.47388,-0.988 12.7553,-31.55078 27.22284,-62.5432 39.68204,-94.09426 -0.2676,-6.9882 -9.5948,-4.13058 -14.24458,-4.97852 -29.5185,-0.337 -59.27056,-0.8612 -88.64752,0.078 l -1.1028,0.4462 z"/>
                <path
                    style="fill:#f9cd45;"
                    d="m 578.23652,-282.73698 c -6.3376,1.1934 -17.11136,-3.24748 -19.38866,5.29968 -14.19202,38.3895 -27.81568,76.98642 -41.68708,115.4926 -0.214,8.7102 11.32254,4.36796 16.78982,5.54908 19.65354,0.3014 39.3071,0.6024 58.96064,0.903 -8.26328,24.74316 -18.20432,49.09628 -25.22536,74.1659 2.27168,7.22138 12.19802,4.00792 17.81598,5.0116 8.8771,-0.6932 18.56134,1.685 26.8448,-1.422 33.04682,-39.65362 66.09438,-79.30666 99.14264,-118.9591 3.31864,-9.09094 -9.7691,-6.1787 -14.96978,-6.56134 -21.1063,-0.066 -42.1501,0.2152 -63.20864,-0.4438 10.28248,-24.80226 22.1485,-49.31874 31.93186,-74.24436 -1.0732,-7.92298 -12.3302,-3.14148 -17.9469,-4.5109 -23.01958,-0.128 -46.03914,-0.368 -69.05932,-0.2806 z"/>
            </svg>`,
    '13d': `<svg class="weather-icon" xmlns="http://www.w3.org/2000/svg" height="150px" viewBox="0 -960 960 960" width="150px" fill="#c7c7c7"><path d="M447.37-77.37V-268.3L301-122.17 254.17-168l193.2-193.2v-86.17H361.2L172-258.17 124.17-303 268.3-447.37H77.37v-65.26H268.3L121.17-660 168-706.83l193.2 194.2h86.17v-87.41L258.17-789 304-836.83 447.37-692.7v-189.93h65.26v189.93L660-839.83 705.83-793l-193.2 192.96v87.41h87.41L790-702.83 836.83-657 692.7-512.63h189.93v65.26H692.7L837.83-301 793-254.17l-192.96-193.2h-87.41v86.17L705.83-167 661-120.17 512.63-268.3v190.93h-65.26Z"/></svg>`,
    '13n': `<svg class="weather-icon" xmlns="http://www.w3.org/2000/svg" height="150px" viewBox="0 -960 960 960" width="150px" fill="#c7c7c7"><path d="M447.37-77.37V-268.3L301-122.17 254.17-168l193.2-193.2v-86.17H361.2L172-258.17 124.17-303 268.3-447.37H77.37v-65.26H268.3L121.17-660 168-706.83l193.2 194.2h86.17v-87.41L258.17-789 304-836.83 447.37-692.7v-189.93h65.26v189.93L660-839.83 705.83-793l-193.2 192.96v87.41h87.41L790-702.83 836.83-657 692.7-512.63h189.93v65.26H692.7L837.83-301 793-254.17l-192.96-193.2h-87.41v86.17L705.83-167 661-120.17 512.63-268.3v190.93h-65.26Z"/></svg>`,
    '50d': `<svg class="weather-icon" xmlns="http://www.w3.org/2000/svg" height="150px" viewBox="0 -960 960 960" width="150px" fill=var(--cloud)><path d="M724.07-198.07q-15.56 0-27.08-11.39-11.51-11.4-11.51-27.19 0-15.56 11.51-27.07 11.52-11.52 27.08-11.52 15.79 0 27.19 11.52 11.39 11.51 11.39 27.07 0 15.79-11.39 27.19-11.4 11.39-27.19 11.39ZM278.1-68.28q-15.69 0-27.14-11.4-11.46-11.4-11.46-27.19 0-15.55 11.4-27.07 11.39-11.52 27.19-11.52 15.45 0 26.9 11.52 11.44 11.52 11.44 27.07 0 15.79-11.44 27.19-11.44 11.4-26.89 11.4ZM240-198.07q-15.79 0-27.19-11.39-11.4-11.4-11.4-27.19 0-15.56 11.4-27.07 11.4-11.52 27.19-11.52h360q15.79 0 27.19 11.52 11.4 11.51 11.4 27.07 0 15.79-11.4 27.19-11.4 11.39-27.19 11.39H240ZM402.15-68.28q-15.79 0-27.19-11.4-11.39-11.4-11.39-27.19 0-15.55 11.39-27.07 11.4-11.52 27.19-11.52h280q15.69 0 27.02 11.52t11.33 27.07q0 15.79-11.33 27.19-11.33 11.4-27.02 11.4h-280ZM290-338.57q-88.67 0-151.37-62.81-62.7-62.82-62.7-151.25 0-80.2 56.86-143.15 56.86-62.96 141.58-69.68 32.72-56 85.93-88.74 53.22-32.73 119.69-32.73 91.49 0 153.83 57.61 62.33 57.62 77.53 142.86 79.72 4.96 126.22 55.42 46.5 50.45 46.5 118.41 0 71.67-50.75 122.87-50.75 51.19-123.32 51.19H290Z"/></svg>`,
    '50n': `<svg class="weather-icon" xmlns="http://www.w3.org/2000/svg" height="150px" viewBox="0 -960 960 960" width="150px" fill=var(--cloud)><path d="M724.07-198.07q-15.56 0-27.08-11.39-11.51-11.4-11.51-27.19 0-15.56 11.51-27.07 11.52-11.52 27.08-11.52 15.79 0 27.19 11.52 11.39 11.51 11.39 27.07 0 15.79-11.39 27.19-11.4 11.39-27.19 11.39ZM278.1-68.28q-15.69 0-27.14-11.4-11.46-11.4-11.46-27.19 0-15.55 11.4-27.07 11.39-11.52 27.19-11.52 15.45 0 26.9 11.52 11.44 11.52 11.44 27.07 0 15.79-11.44 27.19-11.44 11.4-26.89 11.4ZM240-198.07q-15.79 0-27.19-11.39-11.4-11.4-11.4-27.19 0-15.56 11.4-27.07 11.4-11.52 27.19-11.52h360q15.79 0 27.19 11.52 11.4 11.51 11.4 27.07 0 15.79-11.4 27.19-11.4 11.39-27.19 11.39H240ZM402.15-68.28q-15.79 0-27.19-11.4-11.39-11.4-11.39-27.19 0-15.55 11.39-27.07 11.4-11.52 27.19-11.52h280q15.69 0 27.02 11.52t11.33 27.07q0 15.79-11.33 27.19-11.33 11.4-27.02 11.4h-280ZM290-338.57q-88.67 0-151.37-62.81-62.7-62.82-62.7-151.25 0-80.2 56.86-143.15 56.86-62.96 141.58-69.68 32.72-56 85.93-88.74 53.22-32.73 119.69-32.73 91.49 0 153.83 57.61 62.33 57.62 77.53 142.86 79.72 4.96 126.22 55.42 46.5 50.45 46.5 118.41 0 71.67-50.75 122.87-50.75 51.19-123.32 51.19H290Z"/></svg>`,
    '60': `<svg class="weather-icon" xmlns="http://www.w3.org/2000/svg" height="150px" viewBox="0 -960 960 960" width="150px" fill="#f9cd45"><path d="M160-400q0-105 50-187t110-138q60-56 110-85.5l50-29.5v132q0 37 25 58.5t56 21.5q17 0 32.5-7t28.5-23l18-22q72 42 116 116.5T800-400q0 95-49 171.5T622-113q23-26 35.5-58t12.5-67q0-38-14-71.5T615-370L480-502 346-370q-28 27-42 60.5T290-238q0 35 12.5 67t35.5 58q-80-39-129-115.5T160-400Zm320-18 92 90q18 18 28 41t10 49q0 53-38 90.5T480-110q-54 0-92-37.5T350-238q0-26 9.5-49t28.5-41l92-90Z"/></svg>`,
}

// custom weather destricptions
const weatherDescriptions = {
  'Clear': 'Clear sky',
  'few clouds': 'Partly Cloudy',
  'scattered clouds': 'Partly Cloudy',
  'broken clouds': 'Mostly Cloudy',
  'Drizzle': 'Drizzle',
  'Rain': 'Rain',
  'shower rain': 'Rain',
  'Snow': 'Snow',
  'Fog': 'Fog',
  'Mist': 'Mist',
  'Haze': 'Haze'
};

let clockInterval;

function startClock(offsetSeconds) {
  clearInterval(clockInterval);
  function updateTime() {
    const localTime = new Date(Date.now() + offsetSeconds * 1000);
    const hours = String(localTime.getUTCHours()).padStart(2, '0');
    const minutes = String(localTime.getUTCMinutes()).padStart(2, '0');
    document.getElementById('time').textContent = `${hours}:${minutes}`;
  }
  updateTime();
  clockInterval = setInterval(updateTime, 1000);
}
function formatUnix(timestamp, offsetSeconds) {
  const localDate = new Date((timestamp + offsetSeconds) * 1000); 
  const hours = String(localDate.getUTCHours()).padStart(2, '0');
  const minutes = String(localDate.getUTCMinutes()).padStart(2, '0');
  return `${hours}:${minutes}`;
}

// -- Event listeners --

// city input
document.getElementById('cityInput').addEventListener('keypress', (e) => {
  if (e.key === 'Enter') {
    const city = e.target.value.trim();
    if (city) fetchWeatherByCity(city);
  }
});

// get current location
window.addEventListener('load', () => {
  if (navigator.geolocation) {
    navigator.geolocation.getCurrentPosition(
      pos => fetchWeatherByCoords(pos.coords.latitude, pos.coords.longitude),
      () => fetchWeatherByCity('London')
    );
  } else {
    fetchWeatherByCity('London');
  }
});

// -- Get weather data --

async function fetchWeatherByCity(city) {
  try {
    const res = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${encodeURIComponent(city)}&appid=${apiKey}&units=${units}`);
    if (!res.ok) throw new Error('Location not found');
    const data = await res.json();
    updateUI(data);
    fetchAirQuality(data.coord.lat, data.coord.lon);
  } catch (err) {
    alert(err.message);
  }
}

async function fetchWeatherByCoords(lat, lon) {
  try {
    const res = await fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${apiKey}&units=${units}`);
    const data = await res.json();
    updateUI(data);
    fetchAirQuality(lat, lon);
  } catch {
    alert('Unable to fetch weather for your location.');
  }
}

async function fetchAirQuality(lat, lon) {
  try {
    const res = await fetch(`https://api.openweathermap.org/data/2.5/air_pollution?lat=${lat}&lon=${lon}&appid=${apiKey}`);
    const air_quality = (await res.json()).list[0].main.aqi;
    const { text, color } = interpretAirQuality(air_quality);
    const el = document.getElementById('airquality');
    el.textContent = text;
    el.style.color = color;
  } catch {
    document.getElementById('airquality').textContent = 'Unavailable';
  }
}

function interpretAirQuality(air_quality) {
  const map = {
    1: { text: 'Good', color: '#7dffc2' },
    2: { text: 'Fair', color: '#b5ff7d' },
    3: { text: 'Moderate', color: '#ffff7d' },
    4: { text: 'Poor', color: '#ffa500' },
    5: { text: 'Very Poor', color: '#ff5252' }
  };
  return map[air_quality] || { text: 'Unknown', color: 'gray' };
}

const MAX_UV_INDEX = 12;

async function fetchUVIndex(lat, lon, timezone) {
    try {
        const res = await fetch(
            `https://api.open-meteo.com/v1/forecast?latitude=${lat}&longitude=${lon}&hourly=uv_index&forecast_days=1&timezone=auto`
        );
        if (!res.ok) throw new Error('API request failed');
        const data = await res.json();

        const nowUTC = Date.now();

        const nowLocal = nowUTC + timezone * 1000;

        const timeArray = data.hourly.time.map(t => new Date(t).getTime());

        let currentIndex = timeArray.findIndex(t => t >= nowLocal);
        if (currentIndex === -1) {
            currentIndex = timeArray.length - 1;
        }

        const uvIndex = data.hourly.uv_index[currentIndex];

        const element = document.getElementById('uv-index');
        const uvPointEl = document.querySelector('.uv-point');

        if (typeof uvIndex === 'number' && !isNaN(uvIndex)) {
            element.textContent = Math.round(uvIndex);

            const clampedUV = Math.min(uvIndex, MAX_UV_INDEX);
            const uvPercent = (clampedUV / MAX_UV_INDEX) * 100;
            uvPointEl.style.left = `${uvPercent}%`;
        } else {
            element.textContent = 'UV Index: Unavailable';
        }

    } catch (error) {
        document.getElementById('uv-index').textContent = 'UV Index: Unavailable';
        console.error("Error fetching UV index:", error);
    }
}

// Weather map
let map = L.map('map').setView([20,0],1);

  L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
    attribution: '© OpenStreetMap contributors'
  }).addTo(map);

  L.tileLayer(`https://tile.openweathermap.org/map/${'precipitation_new'}/{z}/{x}/{y}.png?appid=${apiKey}`, {
    attribution: '© OpenWeatherMap',
    opacity: 1
  }).addTo(map);

// -- Update UI --

function updateUI(data) {

  const {name, sys, main, weather, timezone, wind} = data;
  const detailedDesc = weather[0].description;
  const mainDesc = weather[0].main;

  const descKey = weatherDescriptions[detailedDesc] || weatherDescriptions[mainDesc] || mainDesc;

  // current details
  document.getElementById('location').textContent = `${name}, ${sys.country}`;
  document.getElementById('temperature').textContent = `${Math.round(main.temp)}°`;
  document.getElementById('description').textContent = descKey;
  document.getElementById('feelslike').textContent = `${Math.round(main.feels_like)}°`;
  document.getElementById('humidity').textContent = `${main.humidity}%`;
  document.getElementById('pressure').textContent = `${main.pressure} mb`;

  // sunrise / sunset
  startClock(timezone);
  const sunrise = sys.sunrise;
  const sunset = sys.sunset;

  const now = Math.floor(Date.now() / 1000);
  const isNight = now > sunset || now < sunrise;
  const isSunsetRise = (now <= sunset+3600 && now >= sunset-3600) || (now <= sunrise+3600 && now >= sunrise-3600);

  const sunrisesetLabel = document.getElementById('sunriseset');
  const sunTime = document.getElementById('sunTime');

  // Sun cycle
  const circleEl = document.getElementById("circle");
  
  function updateRotation() {
    if (!circleEl || !sunrise || !sunset) {
      requestAnimationFrame(updateRotation);
      return;
    }

    const nowUTC = Math.floor(Date.now() / 1000);
    const nowLocal = nowUTC + timezone; // local city time in seconds

    const sunriseLocal = sunrise + timezone; // sunrise in local city time
    const sunsetLocal = sunset + timezone; // sunset in local city time

    let angle;

    if (nowLocal >= sunriseLocal && nowLocal < sunsetLocal) {
      // sunrise -> sunset 0 -> 180
      let t = (nowLocal - sunriseLocal) / (sunsetLocal - sunriseLocal);
      t = Math.min(Math.max(t, 0), 1);
      angle = t * 180;
    } else {
      // sunset -> sunrise 180 -> 360
      let t;
      if (nowLocal >= sunsetLocal) {
        // after sunset before midnight
        t = (nowLocal - sunsetLocal) / (86400 - (sunsetLocal - sunriseLocal));
      } else {
        // after midnight before sunrise
        const yesterdaySunset = sunsetLocal - 86400;
        t = (nowLocal - yesterdaySunset) / (sunriseLocal - yesterdaySunset);
      }
      t = Math.min(Math.max(t, 0), 1);
      angle = 180 + t * 180;
    }

    circleEl.style.transform = `rotate(${angle}deg)`;
    requestAnimationFrame(updateRotation);
  }
  updateRotation();

  if (isNight) {
      sunrisesetLabel.textContent = 'Sunrise';
      sunTime.textContent = formatUnix(sunrise, timezone);
    } else {
      sunrisesetLabel.textContent = 'Sunset';
      sunTime.textContent = formatUnix(sunset, timezone);
    }

  // UV index
  fetchUVIndex(data.coord.lat, data.coord.lon, data.timezone);

  // wind details
  document.getElementById('windSpeed').textContent = `${wind.speed} km/h`;
  document.getElementById('windGusts').textContent = wind.gust ? `${wind.gust} km/h` : 'N/A';
  document.getElementById('windDirection').textContent = `${wind.deg}°`;
  document.getElementById('windArrow').style.transform = `rotate(${wind.deg}deg)`;

  // Conditions
  const cloudyConditions = ['Clouds', 'Rain', 'Thunderstorm', 'Mist', 'Snow', 'Fog', 'Haze'];
  const isCloudy = cloudyConditions.includes(mainDesc) && !isNight;
  
  document.body.classList.toggle('night', isNight);
  document.body.classList.toggle('clouds', isCloudy);
  document.body.classList.toggle('sunsetrise', isSunsetRise);

  document.querySelector('header').classList.toggle('night', isNight);
  document.querySelector('header').classList.toggle('clouds', isCloudy);
  document.querySelector('header').classList.toggle('sunsetrise', isSunsetRise);

  document.querySelector('.entry').classList.toggle('night', isNight);
  document.querySelector('.entry').classList.toggle('clouds', isCloudy);
  document.querySelector('.entry').classList.toggle('sunsetrise', isSunsetRise);
  
  // Icons

  let iconCode = weather[0].icon;
  if (mainDesc === 'Clouds') iconCode = '03d';
  if (['few clouds', 'scattered clouds'].includes(detailedDesc)) iconCode = isNight ? '02n' : '02d';
  if (mainDesc === 'Rain') iconCode = isNight ? '10d' : '10n';
  if (Math.round(main.temp) > 34 && mainDesc === 'Clear') iconCode = '60';
  console.log(iconCode);
  
  document.getElementById('weatherIconContainer').innerHTML = weatherIcons[iconCode] || '';
}